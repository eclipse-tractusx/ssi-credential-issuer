###############################################################
# Copyright (c) 2024 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "issuer.fullname" . }}-{{ .Values.credentialExpiry.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "issuer.labels" . | nindent 4 }}
spec:
  schedule: "0 0 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      name: {{ include "issuer.fullname" . }}-{{ .Values.credentialExpiry.name }}
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: {{ include "issuer.fullname" . }}-{{ .Values.credentialExpiry.name }}
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
            image: "{{ .Values.credentialExpiry.image.name }}:{{ .Values.credentialExpiry.image.tag | default .Chart.AppVersion }}"
            imagePullPolicy: "{{ .Values.credentialExpiry.imagePullPolicy }}"
            env:
            - name: DOTNET_ENVIRONMENT
              value: "{{ .Values.dotnetEnvironment }}"
            {{- if .Values.postgresql.enabled }}
            - name: "ISSUER_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "{{ template "issuer.postgresSecretName" . }}"
                  key: "password"
            - name: "CONNECTIONSTRINGS__ISSUERDB"
              value: "Server={{ template "issuer.postgresql.primary.fullname" . }};Database={{ .Values.postgresql.auth.database }};Port={{ .Values.postgresql.auth.port }};User Id={{ .Values.postgresql.auth.username }};Password=$(ISSUER_PASSWORD);Ssl Mode={{ .Values.dbConnection.sslMode }};"
            {{- end }}
            {{- if not .Values.postgresql.enabled }}
            - name: "ISSUER_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.externalDatabase.secret }}"
                  key: "password"
            - name: "CONNECTIONSTRINGS__ISSUERDB"
              value: "Server={{ .Values.externalDatabase.host }};Database={{ .Values.externalDatabase.database }};Port={{ .Values.externalDatabase.port }};User Id={{ .Values.externalDatabase.username }};Password=$(ISSUER_PASSWORD);Ssl Mode={{ .Values.dbConnection.sslMode }};"
            {{- end }}
            - name: "EXPIRY__EXPIREDVCSTODELETEINMONTH"
              value: "{{ .Values.credentialExpiry.expiry.expiredVcsToDeleteInMonth }}"
            - name: "EXPIRY__INACTIVEVCSTODELETEINWEEKS"
              value: "{{ .Values.credentialExpiry.expiry.inactiveVcsToDeleteInWeeks }}"
            - name: "PROCESSES__IDENTITYID"
              value: "{{ .Values.credentialExpiry.processIdentity.identityId }}"
            ports:
            - name: http
              containerPort: {{ .Values.portContainer }}
              protocol: TCP
            resources:
              {{- toYaml .Values.credentialExpiry.resources | nindent 14 }}
